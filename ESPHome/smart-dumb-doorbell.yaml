esphome:
  name: dumb-doorbell-mqtt
  friendly_name: Dumb Doorbell MQTT
  # on_boot documentation and priorities: https://esphome.io/components/esphome.html#on-boot
  on_boot:
    - priority: 600
      then:
        - light.turn_on:
            id: doorbell_light
            brightness: 100%
            transition_length: 100ms

    - priority: 200
      then: # At this priority, pretty much everything should already be initialized.
        - deep_sleep.prevent: sleep_routine
        - logger.log:
            format: "Starting sensor updates..."
            level: INFO
        - light.turn_off:
            id: doorbell_light
            transition_length: 2s
        - output.turn_on: meas_gnd
        - repeat:
            count: 1
            then:
              - binary_sensor.template.publish:
                  id: doorbell_pressed
                  state: ON
              #Sensor updates are turned off and manually requested on boot.
              #Then the ESP goes back to sleep when they're done (unless told to stay awake)

              # Request sensor updates
              - component.update: LIION
              - delay: 100ms
              - component.update: bat_v
              - component.update: bat_percent
        - output.turn_off: meas_gnd
        - deep_sleep.allow: sleep_routine
        - delay: 2s
        - binary_sensor.template.publish:
            id: doorbell_pressed
            state: OFF
        - if:
            condition:
              - binary_sensor.is_on: battery_updated
            then:
              - logger.log:
                  level: INFO
                  format: "Data from battery received"

            else:
              - logger.log:
                  format: "Battery update missing"
                  level: ERROR

        # Reset data update sensors states
        - binary_sensor.template.publish:
            id: battery_updated
            state: OFF
        - deep_sleep.enter: sleep_routine



esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:
    level: VERBOSE

# MQTT config entry
mqtt:
  broker: 192.168.1.100
  port: 1883
  username: esphome
  password: !secret mqtt_password
  discovery_retain: false
  birth_message:
    topic: ${name}/status
    payload: ''
  will_message:
    topic: ${name}/status
    payload: ''

ota:
  - platform: esphome
    password: "espUpdate32"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.1.124
    gateway: 192.168.0.1
    subnet: 255.255.255.0
  #domain: ".web"
  fast_connect: false
  reboot_timeout: 1min
  power_save_mode: none


mdns:
  disabled: true

captive_portal:

# Sensing routine Setup
binary_sensor:
  - platform: template
    name: "Doorbell Pressed"
    id: doorbell_pressed
  - platform: template
    name: "Battery Read"
    id: battery_updated
    internal: true


# Battery read ADC
sensor:
  - platform: adc
    pin: GPIO4
    name: "Doorbell A2 Voltage"
    id: LIION
    update_interval: never
    attenuation: 2.5db
    internal: true
  - platform: template
    name: "Doorbell Battery Voltage"
    id: bat_v
    unit_of_measurement: 'V'
    update_interval: never
    accuracy_decimals: 2
    icon: "mdi:battery"
    lambda: |-
      return (id(LIION).state * 4);
  - platform: template
    name: "Doorbell Battery Percentage"
    id: bat_percent
    unit_of_measurement: '%'
    update_interval: never
    accuracy_decimals: 0
    device_class: battery
    lambda: |-
      if(id(bat_v).state < 1)
      {return 0;}
      return ((id(bat_v).state-3) /1.2 * 100.00);
    on_value:
      then:
        - binary_sensor.template.publish:
            id: battery_updated
            state: ON


output:
  - platform: ledc
    pin: GPIO7
    id: led_out
    frequency: "1000Hz"
# Measurement GND active low to save leakage power
  - platform: gpio
    pin: GPIO5
    id: meas_gnd
    inverted: True
# LED setup
light:
  - platform: monochromatic
    output: led_out
    name: ${friendly_name} LED
    id: doorbell_light
    internal: true
    default_transition_length: 1s





# Deep sleep configuration
deep_sleep:
  #run_duration: 4s
  #sleep_duration: 3s
  wakeup_pin:
    number: GPIO2
    mode:
      input: True
      open_drain: False
      pulldown: True
    inverted: False
  id: sleep_routine

